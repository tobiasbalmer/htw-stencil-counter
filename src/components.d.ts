/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface ClickCounter {
    'max': any;
    'min': any;
    'startnumber': any;
    'step': any;
  }
  interface ClickCounterAttributes extends StencilHTMLAttributes {
    'max'?: any;
    'min'?: any;
    'startnumber'?: any;
    'step'?: any;
  }

  interface YourCounter {}
  interface YourCounterAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'ClickCounter': Components.ClickCounter;
    'YourCounter': Components.YourCounter;
  }

  interface StencilIntrinsicElements {
    'click-counter': Components.ClickCounterAttributes;
    'your-counter': Components.YourCounterAttributes;
  }


  interface HTMLClickCounterElement extends Components.ClickCounter, HTMLStencilElement {}
  var HTMLClickCounterElement: {
    prototype: HTMLClickCounterElement;
    new (): HTMLClickCounterElement;
  };

  interface HTMLYourCounterElement extends Components.YourCounter, HTMLStencilElement {}
  var HTMLYourCounterElement: {
    prototype: HTMLYourCounterElement;
    new (): HTMLYourCounterElement;
  };

  interface HTMLElementTagNameMap {
    'click-counter': HTMLClickCounterElement
    'your-counter': HTMLYourCounterElement
  }

  interface ElementTagNameMap {
    'click-counter': HTMLClickCounterElement;
    'your-counter': HTMLYourCounterElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
